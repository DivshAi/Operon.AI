version: '3.8'

services:
  # Backend Service (FastAPI)
  backend:
    build:
      context: ../
      dockerfile: deployment/Dockerfile.backend
    container_name: ai_agentic_backend
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ../backend:/app/backend
      - ../deployment/.env:/app/.env
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_agentic_platform
      - TEST_DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_agentic_platform_test
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (Next.js)
  frontend:
    build:
      context: ../
      dockerfile: deployment/Dockerfile.frontend
    container_name: ai_agentic_frontend
    command: npm run dev
    volumes:
      - ../frontend:/app/frontend
      - /app/frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/_next/static"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ai_agentic_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ai_agentic_platform
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_agentic_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ai_agentic_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:

# Networks
networks:
  default:
    name: ai_agentic_network
    driver: bridge